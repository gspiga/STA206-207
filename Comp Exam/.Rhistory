star <- star%>%dplyr::select(g1tmathss, g1classtype, g1schid, g1tchid) %>% na.omit()
star[,2:4] <- star[,2:4] %>% mutate_if(is.double, as.factor)
star
length(unique(star$g1schid))
length(unique(star$g1tchid))
# data("STAR")
# star <-
#   STAR %>% select(math1, school1, experience1, tethnicity1, schoolid1, star1) %>% na.omit()
# #str(star)
# star <- star %>% mutate(teacherID = group_indices(., tethnicity1, experience1, schoolid1, star1))
# Using Harvard database
star <- read_sav("STAR_Students.sav")
# star # 11,601
star <-
star %>% dplyr::select(g1tmathss, g1classtype, g1schid, g1tchid) %>% na.omit()
star[,2:4] <- star[,2:4] %>% mutate_if(is.double, as.factor)
star
# 6,598 rows
# How many students does each teacher have
#table(star$g1tchid)
# How many students does each school have
#table(star$g1schid)
# How many teachers at each school
#table(star$g1schid, star$g1tchid)
#star[order(star$g1tchid),]
# Class type is a fixed effect, they are non random
?read_sav
```{r, message = F, echo = F, warning= F}
# data("STAR")
# star <-
#   STAR %>% select(math1, school1, experience1, tethnicity1, schoolid1, star1) %>% na.omit()
# #str(star)
# star <- star %>% mutate(teacherID = group_indices(., tethnicity1, experience1, schoolid1, star1))
# Using Harvard database
star <- read_sav("STAR_Students.sav")
# star # 11,601
star <-
star %>% dplyr::select(g1tmathss, g1classtype, g1schid, g1tchid) %>% na.omit()
star[,2:4] <- star[,2:4] %>% mutate_if(is.double, as.factor)
star
# 6,598 rows
# How many students does each teacher have
#table(star$g1tchid)
# How many students does each school have
#table(star$g1schid)
# How many teachers at each school
#table(star$g1schid, star$g1tchid)
#star[order(star$g1tchid),]
# Class type is a fixed effect, they are non random
# Visualization
ggplot(star, aes(x = g1tmathss, fill = g1classtype)) + geom_boxplot() + labs(x = "Score", title = "Score vs. Class Type")
# Visualization
ggplot(star, aes(x = g1tmathss, fill = g1classtype)) + geom_boxplot() + labs(x = "Score", title = "Score vs. Class Type")
# Visualization
ggplot(star, aes(x = g1tmathss)) + geom_boxplot() + labs(x = "Score", title = "Boxplot of Math Scores")
plot(redmod.med)
plot(redmod.med)
plot(redmod.med)
ggplot(star, aes(x = g1tmathss, fill = g1classtype)) + geom_boxplot() + labs(x = "Score", title = "Score vs. Class Type")
ggplot(star, aes(x = g1tmathss, fill = g1classtype)) + geom_boxplot() + labs(x = "Score", title = "Score vs. Class Type")
# Outlier removal
plot(redmod.med) # outliers 253, 179, 53
star.sum.sch[c(53, 179, 253),]
# Outlier removal
plot(redmod.med) # outliers 253, 179, 53
star.sum.sch[c(53, 143, 144, 179, 253),]
# Remove these points
star.sum.sch[-c(53, 143, 144, 179, 253),]
# Remove these points
star.sum.sch <- star.sum.sch[-c(53, 143, 144, 179, 253),]
#
mod.med.red <-
aov(median ~ g1classtype + g1schid, data = star.red)
# Remove these points
star.red <- star.sum.sch[-c(53, 143, 144, 179, 253),]
#
mod.med.red <-
aov(median ~ g1classtype + g1schid, data = star.red)
anova(redmod.med)
anova(mod.med.red)
anova(redmod.med)
anova(mod.med.red)
anova(redmod.med)
anova(mod.med.red)
anova(redmod.med)
anova(mod.med.red)
leveneTest(mean ~ g1classtype * g1schid, data = star.red)
leveneTest(median ~ g1classtype * g1schid, data = star.red)
# Checking with BF test, not Bartlett since we have small departures from normality
leveneTest(median ~ g1classtype * g1schid, data = star.sum.sch)
plot(mod.med.red)
leveneTest(mod.med.red$residuals ~ g1classtype * g1schid, data = star.red)
plot(mod.med.red)
# Outlier removal
plot(redmod.med) # outliers 253, 179, 53, 143, 144
star.sum.sch[c(53,61, 143, 144, 179, 253),]
# Remove these points
star.red <- star.sum.sch[-c(53,61, 143, 144, 179, 253),]
# Outlier removal
plot(redmod.med) # outliers 253, 179, 53, 143, 144
star.sum.sch[c(53,61, 143, 144, 179, 253),]
# Outliers are mostly class type 1, who had a very high score, Obs 143 is class type 2, who had a higher than average score
# Remove these points
star.red <- star.sum.sch[-c(53,61, 143, 144, 179, 253),]
#
mod.med.red <-
aov(median ~ g1classtype + g1schid, data = star.red)
anova(redmod.med)
anova(mod.med.red)
leveneTest(mod.med.red$residuals ~ g1classtype * g1schid, data = star.red)
plot(mod.med.red)
leveneTest(median ~ g1classtype * g1schid, data = star.red)
```{r, fig.size = 50%}
# Lets check with a formal test
shapiro.test(redmod$residuals)
# Let's explore the distribution of the median
plot(redmod.med, which = 2) # median has much lighter tails
# Checking homoskedasticity
plot(redmod, which = 3)
# Checking homoskedasticity
plot(redmod, which = 2)
# Checking homoskedasticity
plot(redmod, which = 1)
aov(mean ~ g1classtype + g1schid, data = star.sum.sch)
redmodmodel
redmod$model
# check if we have balanced data
table(star.sum.sch$g1classtype)
# Since we have unbalanced data, we will use a type II ANOVA
library(car)
?ANOVA
?Anova
Anova(redmod.med)
anova(redmod.med)
Anova(redmod.med)
anova(redmod.med)
anova(redmod.med)
Anova(redmod.med)
x <- Anova(redmod.med)
anova(redmod.med)
x <- Anova(redmod.med)
anova(redmod.med)
x <- Anova(redmod.med)
x <- Anova(redmod.med)
ggplot(star, aes(x = g1tmathss, fill = g1classtype)) + geom_boxplot() + labs(x = "Score", title = "Score vs. Class Type")
ggplotly(
ggplot(star, aes(x = g1tmathss, fill = g1classtype)) + geom_histogram(alpha = 0.8, bins = 25) + labs(title = "Histogram of Scores Grouped by Class Type")
) #, position = "identity")
# Visualize the distribution of means of scores
ggplotly(ggplot(star.sum, aes(x = mean)) + geom_histogram(bins = 19) + labs(x = "Mean", title = "Distribution of Means Grouped by Teacher and School ID"))
# We gather the mean of each combination of school id and teacher id
star.sum <-
star %>% group_by(g1classtype, g1schid, g1tchid) %>% summarise(
mean = mean(g1tmathss),
std.dev = sd(g1tmathss),
median = median(g1tmathss)
)
kable(head(star.sum, 10))
# Visualize the distribution of means of scores
ggplotly(ggplot(star.sum, aes(x = mean)) + geom_histogram(bins = 19) + labs(x = "Mean", title = "Distribution of Means Grouped by Teacher and School ID"))
# Visualize the distribution of medians of scores
ggplotly(ggplot(star.sum, aes(x = median)) + geom_histogram(bins = 19) + labs(x = "Median", title = "Distribution of Medianss Grouped by Teacher and School ID"))
# Visualize the distribution of means of scores
ggplotly(ggplot(star.sum, aes(x = mean)) + geom_histogram(bins = 19, col = "#CC0000") + labs(x = "Mean", title = "Distribution of Means Grouped by Teacher and School ID"))
# Visualize the distribution of means of scores
ggplotly(ggplot(star.sum, aes(x = mean)) + geom_histogram(bins = 19, fill = "#CC0000") + labs(x = "Mean", title = "Distribution of Means Grouped by Teacher and School ID"))
# Visualize the distribution of medians of scores
ggplotly(ggplot(star.sum, aes(x = median)) + geom_histogram(bins = 19, "#CC0000") + labs(x = "Median", title = "Distribution of Medianss Grouped by Teacher and School ID"))
# Visualize the distribution of medians of scores
ggplotly(ggplot(star.sum, aes(x = median)) + geom_histogram(bins = 19, fill = "#CC0000") + labs(x = "Median", title = "Distribution of Medianss Grouped by Teacher and School ID"))
# Visualize the distribution of means of scores
ggplotly(ggplot(star.sum, aes(x = mean)) + geom_histogram(bins = 19, fill = "#CC0000") + labs(x = "Mean", title = "Distribution of Means Grouped by Teacher and School ID"))
# Visualize the distribution of medians of scores
ggplotly(ggplot(star.sum, aes(x = median)) + geom_histogram(bins = 19, fill = "#CC0000") + labs(x = "Median", title = "Distribution of Medianss Grouped by Teacher and School ID"))
# Create a summary for schools and plot
ggplotly(ggplot(star.sum, aes(x = as.numeric(g1schid), y = mean)) + geom_point() + labs(x = "School ID", y = "Mean"))
# Create a summary for schools and plot
ggplotly(ggplot(star.sum, aes(x = as.numeric(g1schid), y = median)) + geom_point() + labs(x = "School ID", y = "Mean"))
# Create a summary for schools and plot
ggplotly(ggplot(star.sum, aes(x = as.numeric(g1schid), y = median, color = g1classtype)) + geom_point() + labs(x = "School ID", y = "Mean"))
# Create a summary for schools and plot
ggplotly(ggplot(star.sum, aes(x = as.numeric(g1schid), y = mean, color = g1classtype)) + geom_point() + labs(x = "School ID", y = "Mean"))
# Create a summary for schools and plot
ggplotly(ggplot(star.sum, aes(x = as.numeric(g1schid), y = mean, color = g1classtype)) + geom_point() + labs(x = "School ID", y = "Mean"))
ggplotly(ggplot(star.sum, aes(x = as.numeric(g1schid), y = median, color = g1classtype)) + geom_point() + labs(x = "School ID", y = "Median"))
# Create a summary for schools and plot
ggplotly(ggplot(star.sum, aes(x = as.numeric(g1schid), y = mean, color = g1classtype)) + geom_point() + labs(x = "School ID", y = "Mean"))
ggplotly(ggplot(star.sum, aes(x = as.numeric(g1schid), y = median, color = g1classtype)) + geom_point() + labs(x = "School ID", y = "Median", title = "Scatter Plot of Median Average Score"))
ggplotly(ggplot(star.sum, aes(x = as.numeric(g1schid), y = mean, color = g1classtype)) + geom_point() + labs(x = "School ID", y = "Mean", title = "Scatter Plot of Mean Average Score"))
ggplotly(ggplot(star.sum, aes(x = as.numeric(g1schid), y = median, color = g1classtype)) + geom_point() + labs(x = "School ID", y = "Median", title = "Scatter Plot of Median Average Score"))
# Schools 244728, 244736, 244796,244839
table(star.sum.sch$g1schid)
# Schools 244728, 244736, 244796,244839
table(star.sum.sch$g1schid)
knitr::opts_chunk$set(fig.pos = 'H')
library(AER)
library(dplyr)
library(knitr)
library(haven)
library(ggplot2)
library(plotly)
library(car) # for imbalanced ANOVA
# data("STAR")
# star <-
#   STAR %>% select(math1, school1, experience1, tethnicity1, schoolid1, star1) %>% na.omit()
# #str(star)
# star <- star %>% mutate(teacherID = group_indices(., tethnicity1, experience1, schoolid1, star1))
# Using Harvard database
star <- read_sav("STAR_Students.sav")
# star # 11,601
star <-
star %>% dplyr::select(g1tmathss, g1classtype, g1schid, g1tchid) %>% na.omit()
star[,2:4] <- star[,2:4] %>% mutate_if(is.double, as.factor)
star
# 6,598 rows
# How many students does each teacher have
#table(star$g1tchid)
# How many students does each school have
#table(star$g1schid)
# How many teachers at each school
#table(star$g1schid, star$g1tchid)
#star[order(star$g1tchid),]
# Class type is a fixed effect, they are non random
# Visualization
#ggplot(star, aes(x = g1tmathss)) + geom_boxplot() + labs(x = "Score", title = "Boxplot of Math Scores")
ggplot(star, aes(x = g1tmathss, fill = g1classtype)) + geom_boxplot() + labs(x = "Score", title = "Score vs. Class Type")
ggplotly(
ggplot(star, aes(x = g1tmathss, fill = g1classtype)) + geom_histogram(alpha = 0.8, bins = 25) + labs(title = "Histogram of Scores Grouped by Class Type")
) #, position = "identity")
# We gather the mean of each combination of school id and teacher id
star.sum <-
star %>% group_by(g1classtype, g1schid, g1tchid) %>% summarise(
mean = mean(g1tmathss),
std.dev = sd(g1tmathss),
median = median(g1tmathss)
)
kable(head(star.sum, 10))
# Visualize the distribution of means of scores
ggplotly(ggplot(star.sum, aes(x = mean)) + geom_histogram(bins = 19, fill = "#CC0000") + labs(x = "Mean", title = "Distribution of Means Grouped by Teacher and School ID"))
# Visualize the distribution of medians of scores
ggplotly(ggplot(star.sum, aes(x = median)) + geom_histogram(bins = 19, fill = "#CC0000") + labs(x = "Median", title = "Distribution of Medians Grouped by Teacher and School ID"))
# Create a summary for schools and plot
ggplotly(
ggplot(star.sum, aes(
x = as.numeric(g1schid),
y = mean,
color = g1classtype
)) + geom_point() + labs(x = "School ID", y = "Mean", title = "Scatter Plot of Mean Average Score")
)
ggplotly(
ggplot(star.sum, aes(
x = as.numeric(g1schid),
y = median,
color = g1classtype
)) + geom_point() + labs(x = "School ID", y = "Median", title = "Scatter Plot of Median Average Score")
)
# We group by means of teachers thus making samples for schools
star.sum.sch <-
star %>% group_by(g1tchid) %>% summarise(
mean = mean(g1tmathss),
std.dev = sd(g1tmathss),
median = median(g1tmathss),
g1schid = unique(g1schid),
g1classtype = unique(g1classtype)
)
# Schools 244728, 244736, 244796,244839
table(star.sum.sch$g1schid)
# lets view the scores of these schools and see if they stand out
# filter(star.sum.sch, g1schid == "244728" |  g1schid  =="244736" | g1schid  =="244796" | g1schid  == "244839")
# star.sum.sch <-
#   star.sum.sch %>% filter(.,
#                           g1schid != "244728" &
#                             g1schid  != "244736" & g1schid  != "244796" &
#                             g1schid  != "244839")
# length(unique(star.sum.sch$g1schid))
#
# star.sum.sch %>% filter(.,
#                           g1schid == 244728 |
#                             g1schid  == 244736 | g1schid  == "244796" |
#                             g1schid  == "244839")
# star.sch.red <- star.sum.sch[!(
#   star.sum.sch$g1schid == 244728 |
#     star.sum.sch$g1schid  == 244736 |
#     star.sum.sch$g1schid  == 244796 | star.sum.sch$g1schid  == 244839
# ), ]
#table(star.sch.red$g1classtype)
#unique(star.sch.red$g1schid)
#[star.sch.red$g1schid == "244736",]
# We find interaction to be non significant
fullmod <-
anova(aov(mean ~ g1classtype * g1schid, data = star.sum.sch))
fullmod
# Fit no interaction model
redmod <-
aov(mean ~ g1classtype + g1schid, data = star.sum.sch)
#redmod$residuals
# Model for the median
fullmod.med <-
aov(median ~ g1classtype * g1schid, data = star.sum.sch)
anova(fullmod.med)
# Interaction is still not significant
redmod.med <-
aov(median ~ g1classtype + g1schid, data = star.sum.sch)
anova(redmod.med)
# check if we have balanced data
table(star.sum.sch$g1classtype)
# Since we have unbalanced data, we will use a type II ANOVA
library(car)
anova(redmod.med)
x <- Anova(redmod.med)
# Outlier removal
plot(redmod.med) # outliers 253, 179, 53, 143, 144
star.sum.sch[c(53,61, 143, 144, 179, 253),]
# Outliers are mostly class type 1, who had a very high score, Obs 143 is class type 2, who had a higher than average score
# Remove these points
star.red <- star.sum.sch[-c(53,61, 143, 144, 179, 253),]
#
mod.med.red <-
aov(median ~ g1classtype + g1schid, data = star.red)
anova(redmod.med)
anova(mod.med.red)
leveneTest(median ~ g1classtype * g1schid, data = star.red)
plot(mod.med.red)
# Examine residuals
# ggplot() + geom_qq(aes(sample = redmod)) + geom_abline(aes(slope = 1, intercept = 0))
#
# ggplot(st) + geom_qq(aes(sample = redmod)) + geom_abline(aes(slope = 1, intercept = 0))
# We can see some deviation from normality, given that we have heavy tails
plot(redmod, which= 2)
# Lets check with a formal test
shapiro.test(redmod$residuals)
# We reject, concluding that the population does not come from a normal distribution
# Let's explore the distribution of the median
plot(redmod.med, which = 2) # median has much lighter tails
# Shapiro.test
shapiro.test(redmod.med$residuals)
# Normality is justifiable for median
# Checking mean
# Checking homoskedasticity
plot(redmod, which = 1)
# Brown Forsythe Test
leveneTest(mean ~ g1classtype * g1schid, data = star.sum.sch)
# Checking median
# by plot
plot(redmod.med, which = 1)
# Checking with BF test, not Bartlett since we have small departures from normality
leveneTest(median ~ g1classtype * g1schid, data = star.sum.sch)
# We can see that that BF test says we should reject homoscedasticity, however, our plot fitted values vs residuals shows us that there is no obvious pattern, we will continue with the ANOVA model for median
sessionInfo()
Anova(fullmod.med)
Anova(fullmod.med, type = "III")
Anova(fullmod.med)
alias(fullmodel.med)
alias(fullmod.med)
kable(table(star.sum.sch$g1classtype))
kable(table(star.sum.sch$g1classtype))
nrow(star.sum.sch)
length(unique(star.sum.sch$g1schid))
kable(Anova(redmod.med))
kable(Anova(fullmod.med))
kabl(anova(fullmod.med))
kable(anova(fullmod.med))
anova(fullmod.med)
kable(Anova(fullmod.med))
### NOT USING MEAN MODEL
# We find interaction to be non significant
# fullmod <-
#   anova(aov(mean ~ g1classtype * g1schid, data = star.sum.sch))
# fullmod
# Fit no interaction model
# redmod <-
#   aov(mean ~ g1classtype + g1schid, data = star.sum.sch)
# redmod$residuals
# Model for the median, with interaction
fullmod.med <-
aov(median ~ g1classtype * g1schid, data = star.sum.sch)
kable(Anova(fullmod.med))
# Since we have unbalanced data, we will use a type II ANOVA
# Model without Interaction
redmod.med <-
aov(median ~ g1classtype + g1schid, data = star.sum.sch)
kable(Anova(redmod.med))
TukeyHSD(redmod.med)
TukeyHSD(redmod.med)$g1class
plot(tukeyClass)
tukeyClass <- TukeyHSD(redmod.med)$g1class
plot(tukeyClass)
plot(TukeyHSD)
plot(TukeyHSD(redmod.med))
plot(TukeyHSD(redmod.med))[1]
plot(TukeyHSD(redmod.med), which = 1)
tukey <- TukeyHSD(redmod.med)
plot(tukey)
tukey
plot(tukey$g1classtype)
tukey$g1classtype
plot(tukey)
plot(tukey)[1]
plot(tukey, which = 1)[1]
plot(tukey, which = 1)
list(plot(tukey)
list(plot(tukey))
c(plot(tukey))
c(plot(tukey))[1]
plot(tukey, which =  "g1classtype")
tukey <- TukeyHSD(redmod.med, which = "g1classtype")
plot(tukey)
tukey <- TukeyHSD(redmod.med, which = "g1classtype", col = "#002D65")
plot(tukey)
plot(tukey, col = "#002D65")
# Outlier removal
plot(redmod.med) # outliers 253, 179, 53, 143, 144
tuke
tukey
plot(redmod.med)
boxplot(redmod.med)
boxplot(star.sum.sch)
boxplot(star.sum.sch$median)
# Remove these points
star.red <- star.sum.sch[-c(53,61, 143, 144, 179, 253),]
star.sum.sch[c(53,61, 143, 144, 179, 253),]
plot(redmod.med)
plot(redmod.med, which = 4)
# outliers 253, 179, 53, 143, 144
star.sum.sch[c(53, 143, 144),]
# outliers 253, 179, 53, 143, 144
kable(star.sum.sch[c(53, 143, 144),])
# outliers 253, 179, 53, 143, 144
star.sum.sch[c(53, 143, 144),]
max(star.sum.sch$median)
# outliers 253, 179, 53, 143, 144
star.sum.sch[c(53, 143, 144),]
max(star.sum.sch$median[star.sch.red$g1classtype==2, ])
max(star.sum.sch$median[star.sch.red$g1classtype==2])
max(star.sum.sch$median)
# outliers 253, 179, 53, 143, 144
star.sum.sch[c(53, 143, 144),]
mean(star.sum.sch$median)
# outliers 253, 179, 53, 143, 144
star.sum.sch[c(53, 143, 144),]
(star.sum.sch$median)
mean(star.sum.sch$median)
# outliers 253, 179, 53, 143, 144
star.sum.sch[c(53, 143, 144),]
star.sum.sch[,median]
star.sum.sch[,star.sum.sch$median == 2]
subset(star.sum.sch, star.sum.sch$g1classtype == 2)
max(subset(star.sum.sch, star.sum.sch$g1classtype == 2))
max(subset(star.sum.sch, star.sum.sch$g1classtype == 2)$median)
mean(subset(star.sum.sch, star.sum.sch$g1classtype == 2))
mean(subset(star.sum.sch, star.sum.sch$g1classtype == 2)$median)
# Remove these points
star.red <- star.sum.sch[-c(53,61, 143, 144, 179, 253),]
# Obs 143
mean(subset(star.sum.sch, star.sum.sch$g1classtype == 2 & star.sum.sch$g1schid == "205490")$median)
# Obs 143
subset(star.sum.sch, star.sum.sch$g1classtype == 2 & star.sum.sch$g1schid == "205490")$median)
# Obs 143
subset(star.sum.sch, star.sum.sch$g1classtype == 2 & star.sum.sch$g1schid == "205490")$median
# Obs 143
subset(star.sum.sch, star.sum.sch$g1classtype == 2 & star.sum.sch$g1schid == "205490")
subset(star.sum.sch, star.sum.sch$g1schid == "205490")
# Remove these points
star.red <- star.sum.sch[-c(53, 143, 144),]
#
final.mod <-
aov(median ~ g1classtype + g1schid, data = star.red)
Anova(final.mod)
# Let's explore the distribution of the median
plot(final.mod, which = 2) # median has much lighter tails
# Let's explore the distribution of the median
plot(final.mod, which = 2) # median has much lighter tails
# Shapiro.test
shapiro.test(final.mod.med$residuals)
# Shapiro.test
shapiro.test(final.mod$residuals)
# Let's explore the distribution of the median
plot(final.mod, which = 2) # median has much lighter tails
# Checking median
# by plot
plot(redmod.med, which = 1)
# Checking median
# by plot
plot(final.mod, which = 1)
# Checking with BF test, not Bartlett since we have small departures from normality
leveneTest(median ~ g1classtype * g1schid, data = star.sum.sch)
# Checking with BF test, not Bartlett since we have small departures from normality
leveneTest(median ~ g1classtype * g1schid, data = star.sum.red)
# Checking with BF test, not Bartlett since we have small departures from normality
leveneTest(median ~ g1classtype * g1schid, data = star.red)
# Checking with BF test, not Bartlett since we have small departures from normality
leveneTest(median ~ g1classtype, data = star.red)
# Checking median
# by plot
plot(final.mod, which = 1)
# Checking with BF test, not Bartlett since we have small departures from normality
leveneTest(median ~ g1classtype, data = star.red)
star.sum.sch[c(176, 250),]
subset(star.sum.sch, star.sum.sch$g1classtype == 3)
subset(star.sum.sch, star.sum.sch$g1classtype == 3)$median
mean(subset(star.sum.sch, star.sum.sch$g1classtype == 3)$median)
subset(star.sum.sch, star.sum.sch$g1schid == "216537")
subset(star.sum.sch, star.sum.sch$g1schid == "244746")
kruskal.test(median ~ g1classtype + g1schid, data = star.sum.sch)
kruskal.test(median ~ g1classtype * g1schid, data = star.sum.sch)
friedman.test(median ~ g1classtype * g1schid, data = star.sum.sch)
friedman.test(median ~ g1classtype + g1schid, data = star.sum.sch)
friedman.test(median ~ g1classtype | g1schid, data = star.sum.sch)
friedman.test(median ~ g1classtype, data = star.sum.sch)
friedman.test(median ~ g1classtype, data = star.red)
friedman.test(median ~ g1classtype, data = star.red)
friedman.test(median ~ g1classtype | g1schid, data = star.red)
