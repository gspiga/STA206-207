theme_grey(base_size = 11*1.5))
sum(Norm.df[,1] - mean(Norm.df[,1]))
mean(Norm.df[,1])
Norm.df[,1]
Norm.df[,1] - mean(Norm.df[,1])
Beta1 <- sum(Norm.df[,1] - mean(Norm.df[,1])) * sum(Norm.df[,2] - mean(Norm.df[,2]))
Beta1
Beta1 <- sum(Norm.df[,1] - mean(Norm.df[,1])) * sum(Norm.df[,2] - mean(Norm.df[,2])) / sum(Norm.df[,1] - mean(Norm.df[,1]))^2
Beta1
Beta1 <-
sum(Norm.df[, 1] - mean(Norm.df[, 1])) * sum(Norm.df[, 2] - mean(Norm.df[, 2])) / sum(Norm.df[, 1] - mean(Norm.df[, 1])) ^2
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
Norm.df["y"] <- y
names(Norm.df) <- c("x", "y")
head(Norm.df)
# Base size for labels is 11
# https://ggplot2.tidyverse.org/reference/ggtheme.html
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
sum(Norm.df[, 2] - mean(Norm.df[, 2]))
Beta1 <-
sum(Norm.df[, 1] - mean(Norm.df[, 1])) * sum(Norm.df[, 2] - mean(Norm.df[, 2])) / sum(Norm.df[, 1] - mean(Norm.df[, 1])) ^2
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df[,1]
line
x <- seq(1, 100)
x
w <- 2 + 0.5*x
w
set.seed(123)
myNormDist <- rnorm(100, sd = 5)
cat("The mean is ", mean(myNormDist), "\n")
cat("The standard deviation is ", sd(myNormDist), "\n")
library(ggplot2)
library(plotly)
Norm.df <- data.frame(myNormDist)
ggplotly(ggplot(data = Norm.df, aes(x = myNormDist)) + geom_histogram(bins = 15, fill = "#8a5789"))
y <- myNormDist + w
y
Norm.df["y"] <- y
names(Norm.df) <- c("x", "y")
head(Norm.df)
# Base size for labels is 11
# https://ggplot2.tidyverse.org/reference/ggtheme.html
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
Beta1 <-
sum(Norm.df[, 1] - mean(Norm.df[, 1])) * sum(Norm.df[, 2] - mean(Norm.df[, 2])) / sum(Norm.df[, 1] - mean(Norm.df[, 1])) ^2
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df[,1]
line
line <- Beta0 + Beta1 * Norm.df["x"]
line
Beta1 <-
sum(Norm.df[, 1] - mean(Norm.df[, 1])) * sum(Norm.df[, 2] - mean(Norm.df[, 2])) / sum(Norm.df[, 1] - mean(Norm.df[, 1])) ^2
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df["x"]
names(line) <- c("Ypred")
line["y"] <- Norm.df["y"]
line
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = line)
ggtitle("Y Versus X") +
Beta1 <-
sum(Norm.df[, 1] - mean(Norm.df[, 1])) * sum(Norm.df[, 2] - mean(Norm.df[, 2])) / sum(Norm.df[, 1] - mean(Norm.df[, 1])) ^2
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df["x"]
names(line) <- c("Ypred")
line["x"] <- Norm.df["x"]
line
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = line)
ggtitle("Y Versus X") +
Beta1 <-
sum(Norm.df[, 1] - mean(Norm.df[, 1])) * sum(Norm.df[, 2] - mean(Norm.df[, 2])) / sum(Norm.df[, 1] - mean(Norm.df[, 1])) ^2
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df["x"]
names(line) <- c("Ypred")
line["x"] <- Norm.df["x"]
line
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = line, aes(x = x, y = Ypred))
ggtitle("Y Versus X") +
Beta1 <-
sum(Norm.df[, 1] - mean(Norm.df[, 1])) * sum(Norm.df[, 2] - mean(Norm.df[, 2])) / sum(Norm.df[, 1] - mean(Norm.df[, 1])) ^2
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df["x"]
names(line) <- c("Ypred")
line["x"] <- Norm.df["x"]
line
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = line, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
Beta1 <-
(sum(Norm.df[, 1] - mean(Norm.df[, 1])) * sum(Norm.df[, 2] - mean(Norm.df[, 2]))) / sum(Norm.df[, 1] - mean(Norm.df[, 1])) ^2
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df["x"]
names(line) <- c("Ypred")
line["x"] <- Norm.df["x"]
line
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = line, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
head(Norm.df)
Norm.df[, 1]
Beta1 <-
sum(Norm.df[, 1] - mean(Norm.df[, 1]) * (Norm.df[, 2] - mean(Norm.df[, 2]))) / sum(Norm.df[, 1] - mean(Norm.df[, 1])) ^2
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df["x"]
names(line) <- c("Ypred")
line["x"] <- Norm.df["x"]
line
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = line, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
Beta0
Beta1 <-
sum((Norm.df[, 1] - mean(Norm.df[, 1])) * (Norm.df[, 2] - mean(Norm.df[, 2]))) / sum(Norm.df[, 1] - mean(Norm.df[, 1])) ^2
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df["x"]
names(line) <- c("Ypred")
line["x"] <- Norm.df["x"]
line
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = line, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
Beta1 <-
sum((Norm.df[, 1] - mean(Norm.df[, 1])) * (Norm.df[, 2] - mean(Norm.df[, 2]))) #/ sum(Norm.df[, 1] - mean(Norm.df[, 1])) ^2
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df["x"]
names(line) <- c("Ypred")
line["x"] <- Norm.df["x"]
line
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = line, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
Beta1 <-
sum((Norm.df[, 1] - mean(Norm.df[, 1])) * (Norm.df[, 2] - mean(Norm.df[, 2]))) / sum((Norm.df[, 1] - mean(Norm.df[, 1])) ^2)
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df["x"]
names(line) <- c("Ypred")
line["x"] <- Norm.df["x"]
line
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = line, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
Beta1 <-
sum((Norm.df[, 1] - mean(Norm.df[, 1])) * (Norm.df[, 2] - mean(Norm.df[, 2]))) / sum((Norm.df[, 1] - mean(Norm.df[, 1])^2)
Beta0 <- mean(Norm.df[, 2]) - Beta1 * mean(Norm.df[, 1])
Beta1 <-
sum((Norm.df[, 1] - mean(Norm.df[, 1])) * (Norm.df[, 2] - mean(Norm.df[, 2]))) / sum((Norm.df[, 1] - mean(Norm.df[, 1])) ^2)
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
Beta0
Beta1
line <- Beta0 + Beta1 * Norm.df["x"]
names(line) <- c("Ypred")
line["x"] <- Norm.df["x"]
line
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = line, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
Beta1 <-
sum((Norm.df[, 1] - mean(Norm.df[, 1])) * (Norm.df[, 2] - mean(Norm.df[, 2]))) / sum((Norm.df[, 1] - mean(Norm.df[, 1])) ^2)
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
# Create dataframe for Line
Norm.df["Ypred"] <- Beta0 + Beta1 * Norm.df["x"]
#names(line) <- c("Ypred")
#
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Norm.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
ei <- Norm.df["y"] - Norm.df["Ypred"]
ei
Norm.df["ei"] <- Norm.df["y"] - Norm.df["Ypred"]
ggplotly(ggplot(data = Norm.df, aes(x = x, y = ei)) +
geom_point(color = "#7eb6ff") +
ggtitle("Residuals Versus X") +
theme_grey(base_size = 11*1.5))
ggplotly(ggplot(data = Norm.df, aes(x = x, y = ei)) +
geom_point(color = "#75a876") +
ggtitle("Residuals Versus X") +
theme_grey(base_size = 11*1.5))
Norm.df["ei"] <- Norm.df["y"] - Norm.df["Ypred"]
ggplotly(ggplot(data = Norm.df, aes(x = x, y = ei)) +
geom_point(color = "#75a876") +
ggtitle("Residuals Versus X") +
theme_grey(base_size = 11*1.5))
cat("The MSE is ", sum(Norm.df["ei"]^2) / (nrow(Norm.df) - 2))
Norm.df["ei"] <- Norm.df["y"] - Norm.df["Ypred"]
ggplotly(ggplot(data = Norm.df, aes(x = x, y = ei)) +
geom_point(color = "#75a876") +
ggtitle("Residuals Versus X") +
theme_grey(base_size = 11*1.5))
cat("The MSE is", sum(Norm.df["ei"]^2) / (nrow(Norm.df) - 2))
for (i in c(1,2)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop)) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
figList <- c()
for (i in rep(1,5)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop))) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
}
figList <- c()
for (i in rep(1,5)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop))) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
Loop.df <- data.frame(xLoop, yLoop, Beta0Loop + Beta1Loop * xLoop)
names(Loop.df) <- c("x", "y", "Ypred")
fig <- ggplotly(ggplot(data = Loop.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Loop.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
figList <- c(figList, fig)
}
figList[1]
figList <- c()
for (i in rep(1,5)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop))) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
Loop.df <- data.frame(xLoop, yLoop, Beta0Loop + Beta1Loop * xLoop)
names(Loop.df) <- c("x", "y", "Ypred")
fig <- plotly_build(ggplotly(ggplot(data = Loop.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Loop.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5)))
figList <- c(figList, fig)
}
figList[1]
figList <- c()
for (i in rep(1,5)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop))) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
Loop.df <- data.frame(xLoop, yLoop, Beta0Loop + Beta1Loop * xLoop)
names(Loop.df) <- c("x", "y", "Ypred")
ggplotly(ggplot(data = Loop.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Loop.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5)))
figList <- c()
for (i in rep(1,5)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop))) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
Loop.df <- data.frame(xLoop, yLoop, Beta0Loop + Beta1Loop * xLoop)
names(Loop.df) <- c("x", "y", "Ypred")
ggplotly(ggplot(data = Loop.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Loop.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
#figList <- c(figList, fig)
}
figList[1]$plot
figList <- c()
for (i in rep(1,5)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop))) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
Loop.df <- data.frame(xLoop, yLoop, Beta0Loop + Beta1Loop * xLoop)
names(Loop.df) <- c("x", "y", "Ypred")
ggplotly(ggplot(data = Loop.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Loop.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
#figList <- c(figList, fig)
}
figList <- c()
for (i in rep(1,5)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop))) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
Loop.df <- data.frame(xLoop, yLoop, Beta0Loop + Beta1Loop * xLoop)
names(Loop.df) <- c("x", "y", "Ypred")
cat(ggplotly(ggplot(data = Loop.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Loop.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5)))
#figList <- c(figList, fig)
}
figList <- c()
for (i in rep(1,5)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop))) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
Loop.df <- data.frame(xLoop, yLoop, Beta0Loop + Beta1Loop * xLoop)
names(Loop.df) <- c("x", "y", "Ypred")
ggplotly(ggplot(data = Loop.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Loop.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
#figList <- c(figList, fig)
}
figList <- c(figList, Loop.df)
figList <- c()
for (i in rep(1,5)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop))) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
Loop.df <- data.frame(xLoop, yLoop, Beta0Loop + Beta1Loop * xLoop)
names(Loop.df) <- c("x", "y", "Ypred")
ggplotly(ggplot(data = Loop.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Loop.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
figList <- c(figList, Loop.df)
}
figList
figList[1]
x <- seq(1, 100)
x
w <- 2 + 0.5*x
w
set.seed(123)
myNormDist <- rnorm(100, sd = 5)
cat("The mean is ", mean(myNormDist), "\n")
cat("The standard deviation is ", sd(myNormDist), "\n")
library(ggplot2)
library(plotly)
Norm.df <- data.frame(myNormDist)
ggplotly(ggplot(data = Norm.df, aes(x = myNormDist)) + geom_histogram(bins = 15, fill = "#8a5789"))
y <- myNormDist + w
y
Norm.df["y"] <- y
names(Norm.df) <- c("x", "y")
head(Norm.df)
# Base size for labels is 11
# https://ggplot2.tidyverse.org/reference/ggtheme.html
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
Beta1 <-
sum((Norm.df[, 1] - mean(Norm.df[, 1])) * (Norm.df[, 2] - mean(Norm.df[, 2]))) / sum((Norm.df[, 1] - mean(Norm.df[, 1])) ^2)
Beta0 <- mean(Norm.df[,2]) - Beta1 * mean(Norm.df[, 1])
# Create column for predictions
Norm.df["Ypred"] <- Beta0 + Beta1 * Norm.df["x"]
ggplotly(ggplot(data = Norm.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Norm.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
Norm.df["ei"] <- Norm.df["y"] - Norm.df["Ypred"]
ggplotly(ggplot(data = Norm.df, aes(x = x, y = ei)) +
geom_point(color = "#75a876") +
ggtitle("Residuals Versus X") +
theme_grey(base_size = 11*1.5))
cat("The MSE is", sum(Norm.df["ei"]^2) / (nrow(Norm.df) - 2))
figList <- c()
plotList <- list()
for (i in seq(1,5)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop))) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
Loop.df <- data.frame(xLoop, yLoop, Beta0Loop + Beta1Loop * xLoop)
names(Loop.df) <- c("x", "y", "Ypred")
p <- ggplotly(ggplot(data = Loop.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Loop.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
plotList[[i]] <- p
#figList <- c(figList, Loop.df)
}
plotList[1]
for (i in 1:5) {
print(plotList[[i]])
}
dfOpt <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(dfOpt) <- c("Beta0", "Beta1", "MSE")
for (i in 1:1000) {
set.seed(i + 100)
xOpt <- rnorm(100, sd = 5)
yOpt <- myNormDist + w
B1opt <- sum((xOpt - mean(xOpt)) * (yOpt - mean(yOpt))) / sum((yOpt - mean(yOpt))^2)
B0opt <-mean(yOpt) - B1opt * mean(xOpt)
YpredOpt <- B0opt + B1opt * xOpt
MSEopt <- sum((yOpt - YpredOpt)^2) / length(xOpt) - 2
#dfOpt <- rbind(dfOpt, c(B0opt, B1opt, MSEopt))
dfOpt[i,] <- c(B0opt, B1opt, MSEopt)
}
head(dfOpt)
ggplotly(ggplot(data = dfOpt, aes(x = Beta0)) + geom_histogram(fill = "#4b0082"))
cat("The mean of Beta0 is", mean(dfOpt[,1]), "and the variance is", var(dfOpt[,1]), ".")
ggplotly(ggplot(data = dfOpt, aes(x = Beta1)) + geom_histogram(fill = "#00824b"))
cat("The mean of Beta1 is", mean(dfOpt[,2]), "and the variance is", var(dfOpt[,2]), ".")
ggplotly(ggplot(data = dfOpt, aes(x = MSE)) + geom_histogram(fill = "#824b00"))
cat("The mean of MSE is", mean(dfOpt[,3]), "and the variance is", var(dfOpt[,3]), ".")
#Empty lists for plots
plotList <- list()
plotList2 <- list()
for (i in seq(1,5)) {
set.seed(i)
xLoop <- rnorm(100, sd = 5)
yLoop <- myNormDist + w
Beta1Loop <-
sum((xLoop - mean(xLoop)) * (yLoop - mean(yLoop))) / sum((xLoop - mean(xLoop))^2)
Beta0Loop <- mean(yLoop) - Beta1 * mean(xLoop)
Loop.df <- data.frame(xLoop, yLoop, Beta0Loop + Beta1Loop * xLoop)
names(Loop.df) <- c("x", "y", "Ypred")
#Creating residuals column
Loop.df["ei"] <- Loop.df["y"] - Loop.df["Ypred"]
#Plots for y versus x
p <- ggplotly(ggplot(data = Loop.df, aes(x = x, y = y)) +
geom_point(color = "#7eb6ff") +
geom_line(data = Loop.df, aes(x = x, y = Ypred)) +
ggtitle("Y Versus X") +
theme_grey(base_size = 11*1.5))
plotList[[i]] <- p
#figList <- c(figList, Loop.df)
#Plots for residuals versus X
p2 <- ggplotly(ggplot(data = Loop.df, aes(x = x, y = ei)) +
geom_point(color = "#75a876") +
ggtitle("Residuals Versus X") +
theme_grey(base_size = 11*1.5))
plotList2[[i]] <- p2
}
for (i in 1:5) {
print(plotList[[i]])
print(plotList2[[i]])
}
