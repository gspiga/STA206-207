survdiff(surv_object ~ clinic, data = addicts)
NAcurves <-
survfit(surv_object ~ clinic, type = "fleming-harrington", data = addicts)
# timevec <- 1:2500
#
# #First hazard
# sf1 <- stepfun(NAcurves[1]$time, c(1, NAcurves[1]$surv))
#
# #Second Hazard
# sf2 <- stepfun(NAcurves[2]$time, c(1, NAcurves[2]$surv))
#
# #Cumulative hazard
# cumhaz1 <- -log(sf1(timevec))
# cumhaz2 <- -log(sf2(timevec))
#Cumulative Hazard plot
cumHazPlot <-
ggsurvplot(
NAcurves,
fun = "cumhaz",
palette = c("#581845", "#FFC300"),
ggtheme = theme_light()
) + ggtitle("Cumulative Hazard for Two Clinics")
ggplotly(cumHazPlot[[1]])
# Complimentary log-log survival plot
cumHazPlot <-
ggsurvplot(
NAcurves,
fun = "cloglog",
palette = c("#581845", "#FFC300"),
ggtheme = theme_light()
) + ggtitle("Cumulative Hazard for Two Clinics")
ggplotly(cumHazPlot[[1]])
# Complimentary log-log survival plot
cumHazPlot <-
ggsurvplot(
NAcurves,
fun = "cloglog",
palette = c("#581845", "#FFC300"),
ggtheme = theme_light()
) + ggtitle("Cumulative Hazard for Two Clinics") + xlim(0, 2000)
# Complimentary log-log survival plot
cumHazPlot <-
ggsurvplot(
NAcurves,
fun = "cloglog",
palette = c("#581845", "#FFC300"),
ggtheme = theme_light()
) + ggtitle("Cumulative Hazard for Two Clinics")
ggplotly(cumHazPlot[[1]])
# Complimentary log-log survival plot
cumHazPlot <-
ggsurvplot(
NAcurves,
fun = "cloglog",
palette = c("#581845", "#FFC300"),
ggtheme = theme_light()
) + xlim(0, 2000) + ggtitle("Cumulative Hazard for Two Clinics")
# Complimentary log-log survival plot
cumHazPlot <-
ggsurvplot(
NAcurves,
fun = "cloglog",
palette = c("#581845", "#FFC300"),
xlim - c(0, 2000)
ggtheme = theme_light()
# Complimentary log-log survival plot
cumHazPlot <-
ggsurvplot(
NAcurves,
fun = "cloglog",
palette = c("#581845", "#FFC300"),
xlim = c(0, 2000),
ggtheme = theme_light()
) + ggtitle("Cumulative Hazard for Two Clinics")
ggplotly(cumHazPlot[[1]])
# Complimentary log-log survival plot
cumHazPlot <-
ggsurvplot(
NAcurves,
fun = "cloglog",
palette = c("#581845", "#FFC300"),
xlim = c(0, 10000),
ggtheme = theme_light()
) + ggtitle("Cumulative Hazard for Two Clinics")
ggplotly(cumHazPlot[[1]])
# Complimentary log-log survival plot
cumHazPlot <-
ggsurvplot(
NAcurves,
fun = "cloglog",
palette = c("#581845", "#FFC300"),
ggtheme = theme_light()
) + ggtitle("Cumulative Hazard for Two Clinics")
ggplotly(cumHazPlot[[1]])
# Complimentary log-log survival plot
cumHazPlot <-
ggsurvplot(
NAcurves,
fun = "cloglog",
palette = c("#581845", "#FFC300"),
ggtheme = theme_light()
) + ggtitle("Complimentary Log-Log for Two Clinics")
ggplotly(cumHazPlot[[1]])
# Building a Cox Model
addicts.cox <- coxph(surv_object ~ clinic, data = addicts)
# Building a Cox Model
addicts.cox <- coxph(surv_object ~ clinic, data = addicts)
addicts.cox
# Building a Cox Model
addicts.cox <- coxph(surv_object ~ factor(clinic), data = addicts)
addicts.cox
addicts$clinic
View(addicts.cox)
View(addicts)
head(addicts)
# Clinic is already a factor
class(addicts$clinic)
# Clinic is already a factor
class(addicts$clinic)
# Building a Cox Model
addicts.cox <- coxph(surv_object ~ clinic, data = addicts)
addicts.cox
# Clinic is already a factor
class(addicts$clinic)
# Building a Cox Model
addicts.cox <- coxph(surv_object ~ clinic, data = addicts)
summary(addicts.cox)
# Clinic is already a factor
class(addicts$clinic)
# Building a Cox Model
addicts.cox <- coxph(surv_object ~ clinic, data = addicts)
summary(addicts.cox)
nrow(addicts)
table(addicts$id)
addicts.cox2 <- coxph(surv_object ~ clinic + prison + methodone, data = addicts)
addicts.cox2 <- coxph(surv_object ~ clinic + prison + methadone, data = addicts)
summary(addicts.cox2)
addicts.cox3 <- coxph(surv_object ~ clinic + methadone, data = addicts)
summary(addicts.cox3)
CoxPH <- survfit(addicts.cox, conf.int = F)
addicts.cox3 <- coxph(surv_object ~ clinic + methadone, data = addicts)
summary(addicts.cox3)
CoxPH <- survfit(addicts.cox, conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = tongue) + labs(title = "Comparison of Nelson-Aalen Curves to Kaplan-Meier")
addicts.cox3 <- coxph(surv_object ~ clinic + methadone, data = addicts)
summary(addicts.cox3)
CoxPH <- survfit(addicts.cox, conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addict) + labs(title = "Comparison of Nelson-Aalen Curves to Kaplan-Meier")
addicts.cox3 <- coxph(surv_object ~ clinic + methadone, data = addicts)
summary(addicts.cox3)
CoxPH <- survfit(addicts.cox, conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Nelson-Aalen Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
addicts.cox3 <- coxph(surv_object ~ clinic + methadone, data = addicts)
summary(addicts.cox3)
CoxPH <- survfit(addicts.cox, data.frame(group = 1:3), conf.int = F)
addicts.cox3
addicts.cox3 <- coxph(surv_object ~ clinic + methadone, data = addicts)
summary(addicts.cox3)
CoxPH <- survfit(addicts.cox, data.frame(group = 1:2), conf.int = F)
addicts.cox3 <- coxph(surv_object ~ clinic + methadone, data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ clinic + methadone, data = addicts)
CoxPH <- survfit(addicts.cox, conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Nelson-Aalen Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
addicts.cox3 <- coxph(surv_object ~ clinic + methadone, data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ clinic + methadone, data = addicts)
CoxPH <- survfit(addicts.cox, data.frame(clinic = 1:2) conf.int = F)
addicts.cox3 <- coxph(surv_object ~ clinic + methadone, data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ clinic + methadone, data = addicts)
CoxPH <- survfit(addicts.cox, data.frame(clinic = 1:2), conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Nelson-Aalen Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
addicts.cox3 <- coxph(surv_object ~ clinic + methadone, data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ clinic + methadone, data = addicts)
CoxPH <- survfit(addicts.cox, data.frame(clinic = 1:2), conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Cox PH Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
addicts.cox3 <- coxph(surv_object ~ clinic + methadone, data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ clinic + methadone, data = addicts)
CoxPH <- survfit(addicts.cox, data.frame(clinic = 1:2), conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Cox PH Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
setwd("~/Github/STA206/Homework/HW3")
muscle <- read.table("muscle.text)
muscle
muscle <- read.table("muscle.text:)
muscle <- read.table("muscle.text")
muscle <- read.table("muscle.txt")
muscle
library(ggplot2)
muscle
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
muscle
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle. 10)
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
library(plotly)
library(ggplot2)
library(plotly)
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram())
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram())
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =20))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram())
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =10))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram())
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =15))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram())
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =20))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram())
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =15))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram())
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =10))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram())
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =12))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram())
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =15))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram())
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =15))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram(bins = 15))
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =15))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram(bins = 20))
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =15))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram(bins = 15))
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =15))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram(bins = 10))
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =15))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram(bins = 15))
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =15, fill = "#FF6347"))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram(bins = 15))
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =15, fill = "#FF6347"))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram(bins = 15, fill = "FFA07A"))
muscle <- read.table("muscle.txt")
colnames(muscle) <- c("mass", "age")
head(muscle, 10)
ggplotly(ggplot(muscle, aes(x = mass)) + geom_histogram(bins =15, fill = "#FF6347"))
ggplotly(ggplot(muscle, aes(x = age)) + geom_histogram(bins = 15, fill = "#FFA07A"))
boxcox(mass ~ age, data = muscle)
library(MASS)
boxcox(mass ~ age, data = muscle)
library(MASS)
bxcx <- boxcox(mass ~ age, data = muscle)
lambda <- bxcx$x[which.max(bxcx$y)]
lambda
lambda <- bxcx$x[which.max(bxcx$y)]
bxcx$y
ggplotly(ggplot(muscle, aes(x = age, y= mass)) + geom_point(fill = "#FFA07A"))
ggplotly(ggplot(muscle, aes(x = age, y= mass)) + geom_point(color = "#FFC300"))
# Load in data
display <- read.csv("~/GitHub/BAX-441-FQ-2022/Homework/HW2/Display Space.csv")
head(display, 15)
# Load in data
display <- read.csv("~/GitHub/BAX-441-FQ-2022/Homework/HW2/Display Space.csv")
head(display, 15)
library(ggplot2)
library(plotly)
# We create a scatter plot
plot(display$Display.Feet, display$Sales)
ggplot(data = display, aes(x = Display.Feet, y = Sales)) + geom_point()
# Build a model
display.Model <- lm(Sales ~ Display.Feet, data = display)
summary(display.Model) # $coefficients
plot(display$Display.Feet, display$Sales)
abline(display.Model)
#Lets look at residuals as well
qqnorm(display.Model$residuals)
qqline(display.Model$residuals)
# Let's look for an optimal transformation using BoxCox technique
library(MASS)
boxcox(display$Sales ~ display$Display.Feet)
# Lambda tells us how to transform, if not 0, then we take y^lambda - 1 / lambda
# if y = 0, we take natural log of lambda
# From the plot, let's try lambda 1.5
powerModel <-  lm((Sales^1.5 -1 ) / 1.5 ~ Display.Feet, data = display)
summary(powerModel)
{plot(display$Display.Feet, (display$ Sales^1.5 - 1) / 1.5)
abline(powerModel)}
# How do our residuals look now?
qqnorm(powerModel$residuals)
qqline(powerModel$residuals)
# we output our model summaries side by side
summary(display.Model)
summary(powerModel)
#Loading in Data
banks <-read.csv("~/GitHub/BAX-441-FQ-2022/Homework/HW2/CommunityBanks.csv")
head(banks, 15)
#Building a model
banksModel <-
lm(ROAA.... ~ Efficiency.Ratio.... + Total.Risk.Based.Capital.Ratio....
,
data = banks)
summary(banksModel)
# We can perform the Ftest with ANOVA, the summary above gives us an F* of 37.84
sumBanks <- summary(banksModel)
Fstar <- sumBanks$fstatistic[1]
pf(Fstar, 2, 196, lower.tail = FALSE)
#Same p-value as above
# We find the critival value
t.critical <- qt(0.05, nrow(banks) - 2 - 1, lower.tail = TRUE)
t.critical
# t test stat for efficiency ratio
t_test_stat_effi <- (-0.011730 - 0)/0.002196
# and for risk
t_test_stat_risk <- (0.028612 - 0)/0.005399
# Now we check if its bigger than our critical value
abs(t_test_stat_effi) > t.critical
abs(t_test_stat_risk) > t.critical
#Find the SSR (Explained Variation)
SSE <- sum((banksModel$fitted.values - banks$ROAA....)^2)
# or
SSE <- sum((banksModel$residuals^2))
#Now the SSE (Variation in errors)
SSR <- sum((banksModel$fitted.values - mean(banks$ROAA....))^2)
# Sum them to get the SST (total variation )
SST <- SSR + SSE
# Now we solve for R^2
R2.banks <- SSR/SST
R2.banks
adjR2.banks <- 1 - (SSE/(nrow(banks) - 2 -1))/(SST/(nrow(banks) - 1))
adjR2.banks
?predict
# We make a confidence interval using the predict function
predict(banksModel, newdata = data.frame(Efficiency.Ratio.... = 0.6, Total.Risk.Based.Capital.Ratio.... = 0.15, interval = "confidence"))
# We make a confidence interval using the predict function
predict(banksModel, newdata = data.frame(Efficiency.Ratio.... = 0.6, Total.Risk.Based.Capital.Ratio.... = 0.15), interval = "confidence"))
# We make a confidence interval using the predict function
predict(banksModel, newdata = data.frame(Efficiency.Ratio.... = 0.6, Total.Risk.Based.Capital.Ratio.... = 0.15), interval = "confidence")
# We make a confidence interval using the predict function
predict(banksModel, newdata = data.frame(Efficiency.Ratio.... = 0.6, Total.Risk.Based.Capital.Ratio.... = 0.15), interval = "confidence", conf.level = 0.95)
# We make a confidence interval using the predict function
predict(banksModel, newdata = data.frame(Efficiency.Ratio.... = 0.6, Total.Risk.Based.Capital.Ratio.... = 0.15), interval = "confidence", conf.level = 0.9)
# We make a confidence interval using the predict function
predict(banksModel, newdata = data.frame(Efficiency.Ratio.... = 0.6, Total.Risk.Based.Capital.Ratio.... = 0.15), interval = "confidence", conf.level = 0.95)
# We make a confidence interval using the predict function
predict(banksModel, newdata = data.frame(Efficiency.Ratio.... = 0.6, Total.Risk.Based.Capital.Ratio.... = 0.15), interval = "confidence", conf = 0.95)
# We make a confidence interval using the predict function
predict(banksModel, newdata = data.frame(Efficiency.Ratio.... = 0.6, Total.Risk.Based.Capital.Ratio.... = 0.15), interval = "confidence", conf = 0.9)
predict()
predict
predict()
# We make a confidence interval using the predict function
predict(banksModel, newdata = data.frame(Efficiency.Ratio.... = 0.6, Total.Risk.Based.Capital.Ratio.... = 0.15), interval = "confidence", level = 0.9)
# We make a confidence interval using the predict function
predict(banksModel, newdata = data.frame(Efficiency.Ratio.... = 0.6, Total.Risk.Based.Capital.Ratio.... = 0.15), interval = "confidence", level = 0.9)
# We make a confidence interval using the predict function
predict(banksModel, newdata = data.frame(Efficiency.Ratio.... = 0.6, Total.Risk.Based.Capital.Ratio.... = 0.15), interval = "confidence", level = 0.95)
#Exact same function, but now we change interval to prediction
predict(
banksModel,
newdata = data.frame(
Efficiency.Ratio.... = 0.6,
Total.Risk.Based.Capital.Ratio.... = 0.15
),
interval = "prediction",
level = 0.95
)
medical <- display <- read.csv("~/GitHub/BAX-441-FQ-2022/Homework/HW2/MedicalCo.csv")
head(medical, 15)
lm(SALES ~ ADV + BONUS + MKTSHR + COMPET, data = medical)
medical <- display <- read.csv("~/GitHub/BAX-441-FQ-2022/Homework/HW2/MedicalCo.csv")
head(medical, 15)
modelMed <- lm(SALES ~ ADV + BONUS + MKTSHR + COMPET, data = medical)
summary(modelMed)
addicts.cox3 <- coxph(surv_object ~ clinic, data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ clinic, data = addicts)
CoxPH <- survfit(addicts.cox, data.frame(clinic = 1:2), conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Cox PH Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
addicts.cox3 <- coxph(surv_object ~ factor(clinic), data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ clinic, data = addicts)
CoxPH <- survfit(addicts.cox, data.frame(clinic = 1:2), conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Cox PH Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
addicts.cox3 <- coxph(surv_object ~ factor(clinic), data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ factor(clinic), data = addicts)
CoxPH <- survfit(addicts.cox, data.frame(clinic = 1:2), conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Cox PH Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
addicts.cox3 <- coxph(surv_object ~ factor(clinic), data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ factor(clinic), data = addicts)
CoxPH <- survfit(addicts.cox, data.frame(clinic = 1:2), conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Cox PH Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
NAcurves$surv
NAcurves$surv[2]
NAcurves$surv[1]
rbinom
?rbinom
dbinom(0, 2600, 1/10000)
1/10000
dbinom(0, 2600, 1e-04)
dbinom(1, 2600, 1e-04)
dbinom(2, 2600, 1e-04)
26/100
dpois(0, 0.26)
dpois(1, 0.26)
dpois(2, 0.26)
addicts.cox3 <- coxph(surv_object ~ factor(clinic), data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ factor(clinic), data = addicts)
CoxPH <- survfit(addicts.cox3, data.frame(clinic = 1:2), conf.int = F)
addicts.cox3 <- coxph(surv_object ~ clinic, data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ factor(clinic), data = addicts)
CoxPH <- survfit(addicts.cox, data.frame(clinic = 1:2), conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Cox PH Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
addicts.cox3 <- coxph(surv_object ~ clinic, data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ factor(clinic), data = addicts)
CoxPH <- survfit(addicts.cox3, data.frame(clinic = 1:2), conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Cox PH Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
addicts.cox3 <- coxph(surv_object ~ factor(clinic), data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ factor(clinic), data = addicts)
CoxPH <- survfit(addicts.cox3, data.frame(clinic = 1:2), conf.int = F)
addicts.cox3 <- coxph(surv_object ~ factor(clinic), data = addicts)
summary(addicts.cox3)
KMcurves <- survfit(surv_object ~ factor(clinic), data = addicts)
CoxPH <- survfit(addicts.cox3, data.frame(clinic = c("Clinic1", "Clinic2")), conf.int = F)
fit <- list(CoxPH = CoxPH, KapMei = KMcurves)
compPlot <-
ggsurvplot_combine(fit, data = addicts) + labs(title = "Comparison of Cox PH Curves to Kaplan-Meier")
ggplotly(compPlot[[1]])
