setwd("~/GitHub/STA206/Take Home Quiz")
#(Type your code in the space below)
load("Quiz_data.Rdata")
View(data)
library(plotly)
#(Type your code in the space below)
load("Quiz_data.Rdata")
head(data, 15)
# We count the number of observations
nrow(data)
head(data, 15)
library(ggplot2)
library(GGally)
library(plotly)
#(Type your code in the space below)
ggplotly(ggpairs(data, title = "Correlogram of Data"))
```{r, warning=F}
#(Type your code in the space below)
ggplotly(ggpairs(data, title = "Correlogram of Data"))
library(ggplot2)
library(GGally)
library(plotly)
#(Type your code in the space below)
ggplot(data, aes(x = Y)) + geom_histogram()
#(Type your code in the space below)
ggplot(data, aes(x = Y)) + geom_histogram(bins = 20)
#(Type your code in the space below)
ggplot(data, aes(x = Y)) + geom_histogram(bins = 215)
#(Type your code in the space below)
ggplot(data, aes(x = Y)) + geom_histogram(bins =15)
#(Type your code in the space below)
ggplot(data, aes(x = Y)) + geom_histogram(bins =15, fill = "#7255C0")
#(Type your code in the space below)
ggplot(data, aes(x = Y)) + geom_histogram(bins =15, fill = "#7255C0")
ggplot(data, aes(x = X1)) + geom_histogram(bins =15, fill = "#7255C0")
ggplot(data, aes(x = X2)) + geom_histogram(bins =15, fill = "#7255C0")
ggplotly(ggpairs(data, title = "Correlogram of Data"))
ggarrange
?ggarrange()
library(ggpubr)
library(ggpubr)
ggarrange(Yhist, X1hist, X2hist)
#(Type your code in the space below)
Yhist <- ggplot(data, aes(x = Y)) + geom_histogram(bins =15, fill = "#7255C0")
X1hist <- ggplot(data, aes(x = X1)) + geom_histogram(bins =15, fill = "#7255C0")
X2hist <- ggplot(data, aes(x = X2)) + geom_histogram(bins =15, fill = "#7255C0")
ggarrange(Yhist, X1hist, X2hist, nrow = 1, ncol = 3)
ggplotly(ggpairs(data, title = "Correlogram of Data"))
#(Type your code in the space below)
Yhist <- ggplot(data, aes(x = Y)) + geom_histogram(bins =15, fill = "#7255C0")
X1hist <- ggplot(data, aes(x = X1)) + geom_histogram(bins =15, fill = "#7255C0")
X2hist <- ggplot(data, aes(x = X2)) + geom_histogram(bins =15, fill = "#7255C0")
ggarrange(Yhist, X1hist, X2hist, nrow = 2, ncol = 2)
ggplotly(ggpairs(data, title = "Correlogram of Data"))
ggplotly(ggarrange(Yhist, X1hist, X2hist, nrow = 2, ncol = 2))
#(Type your code in the space below)
Yhist <- ggplot(data, aes(x = Y)) + geom_histogram(bins =15, fill = "#7255C0")
X1hist <- ggplot(data, aes(x = X1)) + geom_histogram(bins =15, fill = "#7255C0")
X2hist <- ggplot(data, aes(x = X2)) + geom_histogram(bins =15, fill = "#7255C0")
ggplotly(ggarrange(Yhist, X1hist, X2hist, nrow = 2, ncol = 2))
#ggplotly(ggpairs(data, title = "Correlogram of Data"))
#(Type your code in the space below)
Yhist <- ggplot(data, aes(x = Y)) + geom_histogram(bins =15, fill = "#7255C0")
X1hist <- ggplot(data, aes(x = X1)) + geom_histogram(bins =15, fill = "#7255C0")
X2hist <- ggplot(data, aes(x = X2)) + geom_histogram(bins =15, fill = "#7255C0")
ggarrange(Yhist, X1hist, X2hist, nrow = 2, ncol = 2)
#ggplotly(ggpairs(data, title = "Correlogram of Data"))
# (Type your code in the space below)
ggplotly(ggpairs(data, title = "Correlogram of Data"))
cor(data)
# (Type your code in the space below)
#We could output correlation matrix
# cor(data)
#This plot will show scatterplot and correlation
ggplotly(ggpairs(data, title = "Correlogram of Data"))
# (Type your code in the space below)
# We fit a first oder model
model <- lm(Y ~ X1 + X2, data = data)
summary(model)
model$coefficients
summary(model)
# We create our new squared variables
data["X1sq"] <- data$X1^2
data["X2sq"] <- data$X2^2
# We create our new squared variables
data["X1sq"] <- data$X1^2
data["X2sq"] <- data$X2^2
model2 <- lm(Y ~ X1 + X2 + X1^2 + X2^2, data = data)
summary(model2)
# We create our new squared variables
data["X1sq"] <- data$X1^2
data["X2sq"] <- data$X2^2
model2 <- lm(Y ~ X1 + X2 + X1sq+ X2sq, data = data)
summary(model2)
# We create our new squared variables
data["X1sq"] <- data$X1^2
data["X2sq"] <- data$X2^2
data["X1X2int"] <- data$X1 * data$X2
#Build model 2
model2 <- lm(Y ~ X1 + X2 + X1sq+ X2sq + X1X2int, data = data)
#
(model2)
# We can find the variance inflation factors by taking inverse of correlation matrix
corr(data)
# We create our new squared variables
data["X1sq"] <- data$X1^2
data["X2sq"] <- data$X2^2
data["X1X2int"] <- data$X1 * data$X2
#Build model 2
model2 <- lm(Y ~ X1 + X2 + X1sq+ X2sq + X1X2int, data = data)
# We can find the variance inflation factors by taking inverse of correlation matrix
corr(data)
# We create our new squared variables
data["X1sq"] <- data$X1^2
data["X2sq"] <- data$X2^2
data["X1X2int"] <- data$X1 * data$X2
#Build model 2
model2 <- lm(Y ~ X1 + X2 + X1sq+ X2sq + X1X2int, data = data)
# We can find the variance inflation factors by taking inverse of correlation matrix
cor(data)
# We create our new squared variables
data["X1sq"] <- data$X1^2
data["X2sq"] <- data$X2^2
data["X1X2int"] <- data$X1 * data$X2
#Build model 2
model2 <- lm(Y ~ X1 + X2 + X1sq+ X2sq + X1X2int, data = data)
# We can find the variance inflation factors by taking inverse of correlation matrix
solve(cor(data))
# We can find the variance inflation factors by taking inverse of correlation matrix
cor(data)
# We can find the variance inflation factors by taking inverse of correlation matrix and finding the diagonals
diag(solve(cor(data)))
summary(model2)
# We can find the variance inflation factors by taking inverse of correlation matrix and finding the diagonals
cor(data)
# We can find the variance inflation factors by taking inverse of correlation matrix and finding the diagonals
diag(solve(cor(data)))
summary(model2)
predict(model2, data.frame(X1 = 0, X2 = 0, X1sq = 0, X2sq = 0, X1X2int = 0), interval = "confidence")
predict(model2, data.frame(X1 = 0, X2 = 0, X1sq = 0, X2sq = 0, X1X2int = 0), interval = "confidence", level = 0.99)
anova(model2, modelRed)
modelRed <- lm(Y ~ X1 + X1sq, data = data)
anova(model2, modelRed)
modelRed <- lm(Y ~ X1 + X1sq, data = data)
anova(model2, modelRed)
anova(modelRed, model2)
# Lets take out the interaction term, and X2, but keep X2 squared
model3 <- lm(Y ~ X1 + X1sq + X2sq, data = data)
summary(model2)
# Lets take out the interaction term, and X2, but keep X2 squared
model3 <- lm(Y ~ X1 + X1sq + X2sq, data = data)
summary(model3)
```{r, warning=F}
# (Type your code in the space below)
#We could output correlation matrix
# cor(data)
#This plot will show scatterplot and correlation
ggplotly(ggpairs(data, title = "Correlogram of Data"))
